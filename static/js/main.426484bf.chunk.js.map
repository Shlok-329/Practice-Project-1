{"version":3,"sources":["Components/Search-Box/search-box.component.jsx","Components/Card/Card.component.jsx","Components/Card-List/Card-List.components.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","props","class","type","placeholder","onChange","func","Card","temp","y","id","toString","className","alt","src","name","email","CardList","monsters","map","x","App","e","setState","searchField","target","value","state","Monsters","altFunc","bind","fetch","then","response","json","users","this","filteredMonsters","filter","monster","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAIaA,G,YAAY,SAACC,GACtB,OACI,uBAAOC,MAAM,SAASC,KAAK,SAASC,YAAaH,EAAMG,YAAaC,SAAUJ,EAAMK,SCF/EC,G,MAAO,SAACN,GACjB,IACIO,EADMP,EAAMQ,EAAEC,GACHC,WACf,OAAQ,sBAAKC,UAAU,iBAAf,UACJ,qBAAKC,IAAI,UAAUC,IAAK,wBAA0BN,EAAO,2BACzD,6BAAKP,EAAMQ,EAAEM,OACb,4BAAId,EAAMQ,EAAEO,aCLPC,G,MAAW,SAAChB,GAAD,OAAY,qBAAKW,UAAU,YAAf,SAC3BX,EAAMiB,SAASC,KAAI,SAAAC,GAChB,OAAO,cAAC,EAAD,CAAiBX,EAAGW,GAATA,EAAEV,WCyCjBW,E,kDA1Cb,aAAc,IAAD,8BACX,gBAgBFf,KAAO,SAACgB,GACN,EAAKC,SAAS,CAACC,YAAcF,EAAEG,OAAOC,SAftC,EAAKC,MAAQ,CACXC,SAAU,GACVJ,YAAa,IAGf,EAAKK,QAAU,EAAKA,QAAQC,KAAb,gBARJ,E,gEAWO,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAACK,SAAUO,S,8BAOlCb,GACNc,KAAKb,SAAS,CAACC,YAAcF,EAAEG,OAAOC,U,+BAG/B,IAAD,EAC0BU,KAAKT,MAA9BC,EADD,EACCA,SAAUJ,EADX,EACWA,YACXa,EAAmBT,EAASU,QAAO,SAAAC,GAAO,OAC9CA,EAAQxB,KAAKyB,cAAcC,SAASjB,EAAYgB,kBAGlD,OACE,sBAAK5B,UAAU,MAAf,UACA,iDACE,cAAC,EAAD,CAAWR,YAAY,kBAAkBE,KAAM8B,KAAKP,UACpD,cAAC,EAAD,CAAUX,SAAUmB,W,GApCVK,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.426484bf.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = (props) => {\r\n    return (\r\n        <input class='search' type='search' placeholder={props.placeholder} onChange={props.func}></input>\r\n    )\r\n};","/* eslint-disable no-template-curly-in-string */\r\nimport React from 'react';\r\nimport './Card.style.css'\r\n\r\nexport const Card = (props) => {\r\n    var temp1=props.y.id;\r\n    var temp=temp1.toString();\r\n    return (<div className='card-container'>\r\n        <img alt='monster' src={'https://robohash.org/' + temp + '?set=set2&size=180x180'} />\r\n        <h2>{props.y.name}</h2>\r\n        <p>{props.y.email}</p>\r\n    </div>\r\n)};","import React from 'react';\r\nimport {Card} from '../Card/Card.component.jsx';\r\n\r\nimport './Card-List.styles.css'\r\n\r\nexport const CardList = (props) => (<div className='card-list'>\r\n        {props.monsters.map(x => {\r\n            return <Card key={x.id} y={x} />\r\n        })}\r\n    </div>\r\n);","import React from 'react'\nimport './App.css';\nimport { SearchBox } from './Components/Search-Box/search-box.component.jsx'\nimport { CardList } from './Components/Card-List/Card-List.components';\n\nclass App extends React.Component{\n  constructor(){\n    super();\n\n    this.state = {\n      Monsters: [],\n      searchField: ''\n    };\n\n    this.altFunc = this.altFunc.bind(this); // Necessary if we are using simple functions\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({Monsters: users}));\n  }\n\n  func = (e) => {\n    this.setState({searchField : e.target.value});\n  };\n\n  altFunc(e){ // This shows Difference between arraw and simple function\n    this.setState({searchField : e.target.value});\n  }\n\n  render(){\n    const {Monsters, searchField} = this.state;\n    const filteredMonsters = Monsters.filter(monster => (\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    ));\n\n    return(\n      <div className=\"App\">\n      <h1>Monster Rolodex</h1>\n        <SearchBox placeholder='search monsters' func={this.altFunc} />\n        <CardList monsters={filteredMonsters} />\n      </div>\n      // We will not write this.altFunc() in ablove div because it simply calls the function rather than assigning it to func\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}